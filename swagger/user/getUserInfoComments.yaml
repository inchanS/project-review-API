get:
  tags:
    - User
  summary: 타겟 유저의 정보 보기
  description: 타겟 유저의 댓글 목록을 반환합니다.<br>
    **토큰은 없어도 되지만, <BR>  
    타겟 유저와 로그인 유저간의 관련된 비공개 정보(원댓글과 비공개 대댓글과 같은 예)는 볼 수 없습니다.**  <br>
    로그인 사용자(토큰이 있을 때)는 다음 사항의 정보를 볼 수 있습니다. <br> 
    - 로그인한 사용자가 다른 사용자의 댓글 목록 열람시, 본인과 관련된 비공개 댓글은 조회 가능 <br>
    - 비공개 댓글의 경우 게시물 작성자는 조회 가능 <br>
    - 비공개 대댓글의 경우 원댓글 작성자는 조회가능(게시물 작성자는 조회불가) <br>
    path parameter로 userId를 받아서 해당 유저의 정보를 반환합니다. <br>
    **path parameter의 userId가 없을 경우, 현재 로그인한** 유저의 정보를 반환합니다. <br>
    무한스크롤을 지원합니다.
  produces:
    - application/json
  security:
    - BearerAuth: []
  parameters:
    - in: path
      name: userId
      description: 타겟유저의 ID
      required: false
      schema:
        type: integer
    - in: query
      name: index
      description: 무한스크롤에서 마지막으로 불러온 댓글의 ID
      required: false
      schema:
        type: integer
    - in: query
      name: limit
      description: 무한스크롤에서 한 번에 불러올 댓글의 개수
      required: false
      schema:
          type: integer
  responses:
      200:
        description: successful operation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Success'
      400:
        description: Invalid parameter
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorInvalidParameter'
      500:
        description: Internal server error

components:
  schemas:
    Success:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            description: 댓글의 ID
            example: 1
          created_at:
            type: string
            description: 댓글의 작성일
            example: '2021-01-02 00:00:00'
          updated_at:
            type: string
            description: 댓글의 수정일
            example: '2021-01-02 00:00:00'
          deleted_at:
            type: string
            description: 댓글의 삭제일
            example: null
          user:
            type: object
            description: 댓글의 작성자 정보
            properties:
              id:
                type: integer
                description: 댓글의 작성자 ID
                example: 1
          feed:
            type: object
            description: 댓글이 작성된 게시글에 대한 정보
            properties:
              id:
                type: integer
                description: 댓글이 작성된 게시글의 ID
                example: 1
              user:
                type: object
                description: 댓글이 작성된 게시글의 작성자 정보
                properties:
                  id:
                    type: integer
                    description: 댓글이 작성된 게시글의 작성자 ID
                    example: 1
          comment:
            type: string
            description: 댓글의 내용
            example: 댓글 내용
          is_private:
            type: boolean
            description: 댓글의 공개 여부
            example: false
          parent:
            type: object
            description: 댓글의 부모 댓글에 대한 정보
            properties:
              id:
                type: integer
                description: 댓글의 부모 댓글의 ID
                example: 1
              user:
                type: object
                description: 댓글의 부모 댓글의 작성자 정보
                properties:
                  id:
                    type: integer
                    description: 댓글의 부모 댓글의 작성자 ID
                    example: 1
    ErrorInvalidParameter:
      type: object
      properties:
        message:
          type: string
          description: path parameter가 없으면서 로그인하지 않았을 때 반환되는 에러 메시지
          example: 'USER_ID_IS_UNDEFINED'