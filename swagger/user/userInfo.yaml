get:
  tags:
    - User
  summary: 로그인한 유저의 모든 정보 보기
  description: 로그인한 유저의 ID, 가입일, 닉네임, 이메일과 게시글 목록, 댓글 목록을 반환합니다.<br>
    **토큰을 필요로 합니다.**
  produces:
    - application/json
  security:
    - BearerAuth: []
  responses:
      200:
        description: successful operation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Success'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorInvalidToken'
      500:
        description: Internal server error

patch:
  tags:
    - User
  summary: 사용자 정보 수정
  description: |  
    사용자 정보를 수정할 수 있는 API입니다.  
    nickname, email, password를 수정할 수 있습니다.  
    nickname, email은 중복되지 않아야 합니다.(중복시 에러 반환)  
    수정하고자 하는 정보는 body에 담아서 보내야 합니다.  
    수정하고자 하는 정보가 일부라면 해당 정보만 보내면 됩니다.
  security:
    - BearerAuth: []
  requestBody:
    description: |  
      수정하고자 하는 정보를 담아서 보내야 합니다.  
      수정하고자 하는 정보가 일부라면 해당 정보만 보내면 됩니다.
    content:
      application/json:
        schema:
          type: object
          properties:
            nickname:
              type: string
              required: false
              description: |  
                사용자의 닉네임입니다.  
                중복되지 않아야 합니다.
            email:
              type: string
              required: false
              description: |  
                사용자의 이메일입니다.  
                중복되지 않아야 합니다.
            password:
              type: string
              required: false
              description: |  
                사용자의 비밀번호입니다.  
                비밀번호는 8자 이상 20자 이하로 설정해야 합니다.  
                비밀번호는 영문이어야 하며 소문자, 대문자, 숫자, 특수문자를 모두 포함해야 합니다.  
                비밀번호는 공백을 포함할 수 없습니다.
  responses:
    200:
      description: |  
        사용자 정보 수정에 성공했을 때 반환됩니다.  
        수정된 사용자 정보를 반환합니다.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: 성공 메시지입니다.
                example: UPDATE_USERINFO_SUCCESS
              result:
                type: object
                properties:
                  id:
                    type: integer
                    description: 사용자의 고유 id입니다.
                    example: 1
                  created_at:
                    type: string
                    description: 사용자의 생성일입니다.
                    example: 2021-08-01 00:00:00.000
                  updated_at:
                    type: string
                    description: 사용자의 수정일입니다.
                    example: 2021-08-01 00:00:00.000
                  deleted_at:
                    type: null
                    description: 사용자의 삭제일입니다.
                    example: null
                  nickname:
                    type: string
                    description: 사용자의 닉네임입니다.
                    example: testNickname
                  email:
                    type: string
                    description: 사용자의 이메일입니다.
                    example: "test@test.com"
    400:
      description: |  
        사용자 정보 수정에 실패했을 때 반환됩니다.  
        비밀번호를 수정하지 않으면서, 닉네임과 이메일의 수정된 내용이 기존 값과 같을 때 반환됩니다.
        에러 메시지를 반환합니다.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: 에러 메시지입니다.
                example: NO_CHANGE
    409:
      description: |  
        사용자 정보 수정에 실패했을 때 반환됩니다.  
        닉네임 또는 이메일이 중복될 때 반환됩니다.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                oneOf:
                  - type: string
                    description: 닉네임 중복시 에러 메시지입니다.
                    example: (input)_IS_NICKNAME_THAT_ALREADY_EXSITS
                  - type: string
                    description: 이메일 중복시 에러 메시지입니다.
                    example: (input)_IS_EMAIL_THAT_ALREADY_EXSITS
    500:
      description: |  
        사용자 정보 수정에 실패했을 때 반환됩니다.  
        서버의 에러로 인해 수정에 실패했을 때 에러를 반환합니다.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: 에러 메시지입니다.
                example: INTERNAL_SERVER_ERROR

delete:
  tags:
    - User
  summary: 사용자 삭제
  description: |  
    사용자를 삭제할 수 있는 API입니다.  
    사용자를 삭제하면 해당 사용자에 대한 다음 정보는 모두 삭제 처리됩니다.  
    - 사용자가 작성한 모든 게시글  
    - 사용자가 작성한 모든 댓글  
    - 사용자가 다른 게시글에 남긴 모든 공감
  security:
    - BearerAuth: []
  responses:
    200:
      description: 사용자 삭제에 성공했을 때 반환됩니다.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: 성공 메시지입니다.
                example: DELETE_USER_SUCCESS
    404:
      description: |  
        삭제하고자 하는 사용자를 찾을 수 없을 때, 에러 메시지를 반환합니다.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: 에러 메시지입니다.
                example: USER_IS_NOT_FOUND
    500:
      description: |  
        사용자 삭제에 실패했을 때 반환됩니다.  
        서버의 에러로 인해 삭제에 실패했을 때 에러를 반환합니다.

components:
  schemas:
    Success:
      type: object
      properties:
        myInfo:
          type: object
          properties:
            id:
              type: integer
              description: 유저의 ID
              example: 16
            createdAt:
              type: string
              description: 유저의 가입일
              example: '2021-01-01T00:00:00.000Z'
            nickname:
              type: string
              description: 유저의 닉네임
              example: 'black'
            email:
              type: string
              description: 유저의 이메일
              example: 'black@test.com'
        myFeeds:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                description: 게시글의 ID
                example: 1
              title:
                type: string
                description: 게시글의 제목
                example: '게시글 제목'
              content:
                type: string
                description: 게시글의 내용
                example: '게시글 내용'
              createdAt:
                type: string
                description: 게시글의 작성일
                example: '2021-01-01T00:00:00.000Z'
              updatedAt:
                type: string
                description: 게시글의 수정일
                example: '2021-01-01T00:00:00.000Z'
              userId:
                type: integer
                description: 게시글의 작성자 ID
                example: 16
              user:
                type: object
                properties:
                  id:
                    type: integer
                    description: 게시글의 작성자 ID
                    example: 16
                  nickname:
                    type: string
                    description: 게시글의 작성자 닉네임
                    example: 'black'
                  email:
                    type: string
                    description: 게시글의 작성자 이메일
                    example: test@test.com
        myComments:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                description: 댓글의 ID
                example: 1
              content:
                type: string
                description: 댓글의 내용
                example: 댓글 내용
              createdAt:
                type: string
                description: 댓글의 작성일
                example: 2021-01-01T00:00:00.000Z
              updatedAt:
                type: string
                description: 댓글의 수정일
                example: 2021-01-01T00:00:00.000Z
              userId:
                type: integer
                description: 댓글의 작성자 ID
                example: 16
              user:
                type: object
                properties:
                  id:
                    type: integer
                    description: 댓글의 작성자 ID
                    example: 16
                  nickname:
                    type: string
                    description: 댓글의 작성자 닉네임
                    example: 'black'
                  email:
                    type: string
                    description: 댓글의 작성자 이메일
                    example: 'test@test.com'
    ErrorInvalidToken:
      type: object
      properties:
        message:
          type: string
          description: 토큰이 유효하지 않을 때 반환되는 에러 메시지
          example: 'INVALID_TOKEN'