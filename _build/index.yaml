openapi: 3.0.0
servers:
  - description: project_review localhost API document
    url: 'http://localhost:8000'
info:
  version: 1.0.0
  title: project_review-API
  description: The API for project_review
  contact:
    name: Inchan Song
    url: 'https://github.com/inchanS'
    email: song@inchan.dev
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
paths:
  /users/signup:
    post:
      tags:
        - User
      summary: 회원가입
      description: 회원가입
      produces:
        - application/json
      requestBody:
        description: 회원가입시 필요한 사용자 정보 객체
        required: true
        content:
          application/json:
            schema:
              $ref: '#/paths/~1users~1signup/components/schemas/User'
      responses:
        '201':
          description: successful operation
          content:
            apllication/json:
              schema:
                $ref: '#/paths/~1users~1signup/components/schemas/Success'
        '500':
          description: Internal server error
          content:
            apllication/json:
              schema:
                $ref: '#/paths/~1users~1signup/components/schemas/Error'
    components:
      schemas:
        User:
          type: object
          properties:
            nickname:
              type: string
              description: The nickname of the user
              example: 블랙팬서
            email:
              type: string
              description: The email of the user
              example: black@test.com
            password:
              type: string
              description: The password of the user
              example: Abcd@1234
        Success:
          type: object
          properties:
            message:
              type: string
              description: 회원가입 성공 메세지
              example: SIGNUP_SUCCESS
        Error:
          type: object
          properties:
            message:
              type: string
              description: 가입 실패시 메세지
              example: (THIS_EMAIL)_IS_MAIL_THAT_ALREADY_EXSITS
  /users/signin:
    post:
      tags:
        - User
      summary: 회원 로그인
      description: 회원 로그인 관련 API
      produces:
        - application/json
      requestBody:
        description: 회원 로그인시 필요한 사용자 정보 객체
        required: true
        content:
          application/json:
            schema:
              $ref: '#/paths/~1users~1signin/components/schemas/User'
      responses:
        '200':
          description: successful operation
          content:
            apllication/json:
              schema:
                $ref: '#/paths/~1users~1signin/components/schemas/Success'
        '500':
          description: Internal server error
          content:
            apllication/json:
              schema:
                $ref: '#/paths/~1users~1signin/components/schemas/Error'
    components:
      schemas:
        User:
          type: object
          properties:
            email:
              type: string
              description: The email of the user
              example: black@test.com
            password:
              type: string
              description: The password of the user
              example: Abcd@1234
        Success:
          type: object
          properties:
            message:
              type: string
              description: 로그인 성공 메세지
              example: SIGNIN_SUCCESS
            result:
              type: object
              description: 로그인 성공시 토큰값
              properties:
                token:
                  type: string
                  description: 토큰값
                  example: 'token: ''eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTYsImlhdCI6MTY3ODEyOTY0OX0.eyNOFEZt5xPSakzy4FyGqub9heSZA5FtOZGtWyTI4vg'''
        Error:
          type: object
          properties:
            message:
              type: string
              description: 로그인 실패시 메세지
              example: (THIS_EMAIL)_IS_NOT_FOUND
  /users/checknickname:
    get:
      tags:
        - User
      summary: 회원가입시 닉네임 중복체크
      description: 회원가입시 닉네임 중복체크
      produces:
        - application/json
      parameters:
        - name: nickname
          in: query
          description: 중복체크할 닉네임
          required: true
          type: string
          example: 'http://localhost:8000/users/checknickname?nickname=블랙팬서'
      responses:
        '200':
          description: successful operation
          content:
            apllication/json:
              schema:
                $ref: '#/paths/~1users~1checknickname/components/schemas/Success'
        '500':
          description: Internal server error
          content:
            apllication/json:
              schema:
                $ref: '#/paths/~1users~1checknickname/components/schemas/Error'
    components:
      schemas:
        Success:
          type: object
          properties:
            message:
              type: string
              description: 닉네임 중복체크 성공 메세지
              example: AVAILABLE_NICKNAME
        Error:
          type: object
          properties:
            message:
              type: string
              description: 닉네임 중복체크 실패 메세지
              example: (THIS_EMAIL)_IS_NICKNAME_THAT_ALREADY_EXSITS
  /users/checkemail:
    get:
      tags:
        - User
      summary: 회원가입시 이메일 중복체크
      description: 회원가입시 이메일 중복체크
      produces:
        - application/json
      parameters:
        - name: email
          in: query
          description: 중복체크할 이메일
          required: true
          type: string
          example: 'http://localhost:8000/users/checkemail?email=test123'
      responses:
        '200':
          description: successful operation
          content:
            apllication/json:
              schema:
                $ref: '#/paths/~1users~1checkemail/components/schemas/Success'
        '500':
          description: Internal server error
          content:
            apllication/json:
              schema:
                $ref: '#/paths/~1users~1checkemail/components/schemas/Error'
    components:
      schemas:
        Success:
          type: object
          properties:
            message:
              type: string
              description: 이메일 중복체크 성공 메세지
              example: AVAILABLE_EMAIL
        Error:
          type: object
          properties:
            message:
              type: string
              description: 이메일 중복체크 실패 메세지
              example: (THIS_EMAIL)_IS_EMAIL_THAT_ALREADY_EXSITS
  /users/getme:
    get:
      tags:
        - User
      summary: 로그인한 유저의 모든 정보 보기
      description: '로그인한 유저의 ID, 가입일, 닉네임, 이메일과 게시글 목록, 댓글 목록을 반환합니다.<br> **토큰을 필요로 합니다.**'
      produces:
        - application/json
      security:
        - BearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            apllication/json:
              schema:
                $ref: '#/paths/~1users~1getme/components/schemas/Success'
        '500':
          description: Internal server error
          content:
            apllication/json:
              schema:
                $ref: '#/paths/~1users~1getme/components/schemas/Error'
    components:
      schemas:
        Success:
          type: object
          properties:
            myInfo:
              type: object
              properties:
                id:
                  type: integer
                  description: 유저의 ID
                  example: 16
                createdAt:
                  type: string
                  description: 유저의 가입일
                  example: '2021-01-01T00:00:00.000Z'
                nickname:
                  type: string
                  description: 유저의 닉네임
                  example: black
                email:
                  type: string
                  description: 유저의 이메일
                  example: black@test.com
            myFeeds:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                    description: 게시글의 ID
                    example: 1
                  title:
                    type: string
                    description: 게시글의 제목
                    example: 게시글 제목
                  content:
                    type: string
                    description: 게시글의 내용
                    example: 게시글 내용
                  createdAt:
                    type: string
                    description: 게시글의 작성일
                    example: '2021-01-01T00:00:00.000Z'
                  updatedAt:
                    type: string
                    description: 게시글의 수정일
                    example: '2021-01-01T00:00:00.000Z'
                  userId:
                    type: integer
                    description: 게시글의 작성자 ID
                    example: 16
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: 게시글의 작성자 ID
                        example: 16
                      nickname:
                        type: string
                        description: 게시글의 작성자 닉네임
                        example: black
                      email:
                        type: string
                        description: 게시글의 작성자 이메일
                        example: test@test.com
            myComments:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                    description: 댓글의 ID
                    example: 1
                  content:
                    type: string
                    description: 댓글의 내용
                    example: 댓글 내용
                  createdAt:
                    type: string
                    description: 댓글의 작성일
                    example: 2021-01-01T00:00:00.000Z
                  updatedAt:
                    type: string
                    description: 댓글의 수정일
                    example: 2021-01-01T00:00:00.000Z
                  userId:
                    type: integer
                    description: 댓글의 작성자 ID
                    example: 16
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: 댓글의 작성자 ID
                        example: 16
                      nickname:
                        type: string
                        description: 댓글의 작성자 닉네임
                        example: black
                      email:
                        type: string
                        description: 댓글의 작성자 이메일
                        example: test@test.com
        Error:
          type: object
          properties:
            message:
              type: string
              description: 토큰이 유효하지 않을 때 반환되는 에러 메시지
              example: INVALID_TOKEN
  /comments:
    post:
      tags:
        - Comment
      summary: 댓글 작성
      description: 댓글 작성 API
      produces:
        - application/json
      security:
        - BearerAuth: []
      requestBody:
        description: 댓글 작성시 필요한 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/paths/~1comments/components/schemas/CreateComment'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/paths/~1comments/components/schemas/Success'
        '401':
          description: Invalid token
          content:
            application/json:
              schema:
                $ref: '#/paths/~1comments/components/schemas/ErrorInvalidToken'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1comments/components/schemas/Error'
    patch:
      tags:
        - Comment
      summary: 댓글 수정
      description: 댓글 수정 API
      produces:
        - application/json
      security:
        - BearerAuth: []
      requestBody:
        description: 댓글 수정시 필요한 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/paths/~1comments/components/schemas/UpdateComment'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/paths/~1comments/components/schemas/SuccessUpdateComment'
        '401':
          description: Invalid token
          content:
            application/json:
              schema:
                $ref: '#/paths/~1comments/components/schemas/ErrorInvalidTokenWithComment'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1comments/components/schemas/ErrorUpdateComment'
    components:
      schemas:
        CreateComment:
          type: object
          properties:
            feed:
              type: integer
              description: 댓글을 작성할 게시글의 ID
              example: 1
            content:
              type: string
              description: 댓글 내용
              example: 댓글 내용
            is_private:
              type: boolean
              description: 댓글 공개 여부 (기본값 false)
              required: false
              example: true
        Success:
          type: object
          properties:
            message:
              type: string
              description: 댓글 작성 성공시 메세지
              example: THIS_COMMENT_HAS_BEEN_SUCCESSFULLY_CREATED
        Error:
          type: object
          properties:
            message:
              type: object
              description: 댓글 작성 실패시 메세지
              properties:
                isString:
                  type: string
                  description: 댓글 내용이 문자열이 아닐 경우
                  example: comment must be a string
                isNotEmpty:
                  type: string
                  description: 댓글 내용이 비어있을 경우
                  example: comment should not be empty
        ErrorInvalidToken:
          type: object
          properties:
            message:
              type: string
              description: 유효하지 않은 토큰일 경우
              example: INVALID_TOKEN
        UpdateComment:
          type: object
          properties:
            commentId:
              type: integer
              description: 댓글의 ID
              example: 1
            content:
              type: string
              description: 댓글 내용
              example: 댓글 내용
            is_private:
              type: boolean
              description: 댓글 공개 여부 (기본값 false)
              required: false
              example: true
        SuccessUpdateComment:
          type: object
          properties:
            message:
              type: string
              description: 댓글 수정 성공시 메세지
              example: THIS_COMMENT_HAS_BEEN_SUCCESSFULLY_UPDATED
        ErrorUpdateComment:
          type: object
          oneOf:
            - $ref: '#/paths/~1comments/components/schemas/ErrorCommentNotFound'
            - $ref: '#/paths/~1comments/components/schemas/ErrorCommentNotChanged'
        ErrorCommentNotFound:
          type: object
          properties:
            message:
              type: string
              description: 댓글이 존재하지 않을 경우
              example: ID_217_COMMENT_DOES_NOT_EXIST
        ErrorCommentNotChanged:
          type: object
          properties:
            message:
              type: string
              description: 댓글이 수정내용이 없을 경우
              example: COMMENT_IS_NOT_CHANGED
        ErrorInvalidTokenWithComment:
          type: object
          oneOf:
            - $ref: '#/paths/~1comments/components/schemas/ErrorInvalidToken'
            - $ref: '#/paths/~1comments/components/schemas/ErrorInvalidTokenAndAuth'
        ErrorInvalidTokenAndAuth:
          type: object
          properties:
            message:
              type: string
              description: 댓글 작성자가 아닐 경우
              example: ONLY_THE_AUTHOR_CAN_EDIT
  '/comments/{feedId}':
    get:
      tags:
        - Comment
      summary: 댓글 목록 조회
      description: 댓글 목록 조회 API
      produces:
        - application/json
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: feedId
          description: 게시글의 ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/paths/~1comments~1%7BfeedId%7D/components/schemas/SuccessGetComment'
        '401':
          description: Invalid token
          content:
            application/json:
              schema:
                $ref: '#/paths/~1comments/components/schemas/ErrorInvalidTokenWithComment'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1comments/components/schemas/ErrorCommentNotFound'
    components:
      schemas:
        SuccessGetComment:
          type: array
          description: 댓글 목록
          items:
            type: object
            properties:
              id:
                type: integer
                description: 댓글의 ID
                example: 1
              createdAt:
                type: string
                description: 댓글 작성 시간
                example: '2021-08-01T00:00:00.000Z'
              updatedAt:
                type: string
                description: 댓글 수정 시간
                example: '2021-08-01T00:00:00.000Z'
              deletedAt:
                type: string
                description: 댓글 삭제 시간
                example: '2021-08-01T00:00:00.000Z'
              user:
                type: object
                description: 댓글 작성자 정보
                properties:
                  id:
                    type: integer
                    description: 댓글 작성자의 ID
                    example: 1
                  nickname:
                    type: string
                    description: 댓글 작성자의 닉네임
                    example: 닉네임
                  email:
                    type: string
                    description: 댓글 작성자의 이메일
                    example: sea@heaven.com
              feed:
                type: object
                description: 댓글이 작성된 게시글 정보
                properties:
                  id:
                    type: integer
                    description: 댓글이 작성된 게시글의 ID
                    example: 1
                  title:
                    type: string
                    description: 댓글이 작성된 게시글의 제목
                    example: 게시글 제목
              comment:
                type: string
                description: 댓글 내용
                example: 댓글 내용
              is_private:
                type: boolean
                description: 댓글 공개 여부
                example: true
              children:
                type: array
                description: 대댓글 목록
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: 대댓글의 ID
                      example: 1
                    createdAt:
                      type: string
                      description: 대댓글 작성 시간
                      example: '2021-08-01T00:00:00.000Z'
                    updatedAt:
                      type: string
                      description: 대댓글 수정 시간
                      example: '2021-08-01T00:00:00.000Z'
                    deletedAt:
                      type: string
                      description: 대댓글 삭제 시간
                      example: '2021-08-01T00:00:00.000Z'
                    user:
                      type: object
                      description: 대댓글 작성자 정보
                      properties:
                        id:
                          type: integer
                          description: 대댓글 작성자의 ID
                          example: 1
                        nickname:
                          type: string
                          description: 대댓글 작성자의 닉네임
                          example: 닉네임
                        email:
                          type: string
                          description: 대댓글 작성자의 이메일
                          example: email@email.com
                    comment:
                      type: string
                      description: 대댓글 내용
                      example: 대댓글 내용
                    is_private:
                      type: boolean
                      description: 대댓글 공개 여부
                      example: true
  '/comments/{commentId}':
    delete:
      tags:
        - Comment
      summary: 댓글 삭제
      description: 댓글 삭제 API
      produces:
        - application/json
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: commentId
          description: 댓글의 ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/paths/~1comments~1%7BcommentId%7D/components/schemas/SuccessDeleteComment'
        '401':
          description: Invalid token
          content:
            application/json:
              schema:
                $ref: '#/paths/~1comments/components/schemas/ErrorInvalidTokenWithComment'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1comments/components/schemas/ErrorCommentNotFound'
    components:
      schemas:
        SuccessDeleteComment:
          type: object
          properties:
            message:
              type: string
              description: 댓글 삭제 성공시 메세지
              example: THIS_COMMENT_HAS_BEEN_SUCCESSFULLY_DELETED
